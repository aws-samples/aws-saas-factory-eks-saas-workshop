apiVersion: v1
data:
  config.json: |
    {
      "apiUrl": "//a6827acb0d6ef4172b966aa6ba3da833-2faefb68832aa130.elb.us-west-2.amazonaws.com",
      "stage": "develop",
      "amplifyConfig": {
        "aws_project_region": "us-west-2",
        "aws_cognito_region": "us-west-2",
        "aws_user_pools_id": "us-west-2_aw33YGjZo",
        "aws_user_pools_web_client_id": "5m7i2urrjv61dou5lmm7ege6mp"
      }
    }
kind: ConfigMap
metadata:
  name: admin-config
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-application
  template:
    metadata:
      labels:
        app: admin-application
    spec:
      containers:
        - name: admin-application
          image: public.ecr.aws/o2b5n0j5/eks-saas-admin:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: "http"
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/nginx/html/admin/assets/config
      volumes:
        - name: config-volume
          configMap:
            name: admin-config
---
apiVersion: v1
kind: Service
metadata:
  name: admin-application-service
spec:
  selector:
    app: admin-application
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-application-service-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/mergeable-ingress-type: "minion"
spec:
  rules:
    - host: a6827acb0d6ef4172b966aa6ba3da833-2faefb68832aa130.elb.us-west-2.amazonaws.com
      http:
        paths:
          - backend:
              service:
                name: admin-application-service
                port:
                  number: 80
            path: /admin
            pathType: Prefix
