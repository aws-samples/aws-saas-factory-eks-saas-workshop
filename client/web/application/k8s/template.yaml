apiVersion: v1
data:
  config.json: |
    {
      "apiUrl": "//a6827acb0d6ef4172b966aa6ba3da833-2faefb68832aa130.elb.us-west-2.amazonaws.com",
      "stage": "develop"
    }
kind: ConfigMap
metadata:
  name: app-config
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
        - name: application
          image: public.ecr.aws/o2b5n0j5/eks-saas-application:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: "http"
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/nginx/html/app/assets/config
      volumes:
        - name: config-volume
          configMap:
            name: app-config
---
apiVersion: v1
kind: Service
metadata:
  name: application-service
spec:
  selector:
    app: application
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: application-service-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/mergeable-ingress-type: "minion"
spec:
  rules:
    - host: a6827acb0d6ef4172b966aa6ba3da833-2faefb68832aa130.elb.us-west-2.amazonaws.com
      http:
        paths:
          - backend:
              service:
                name: application-service
                port:
                  number: 80
            path: /app
            pathType: Prefix
